import{_ as t,c as a,a2 as r,o as n}from"./chunks/framework.C9NVOr0y.js";const p=JSON.parse('{"title":"Media Servers","description":"","frontmatter":{},"headers":[],"relativePath":"USA-Internet/content-moderation/media-servers/index.md","filePath":"USA-Internet/content-moderation/media-servers/index.md"}'),i={name:"USA-Internet/content-moderation/media-servers/index.md"};function o(s,e,d,c,h,m){return n(),a("div",null,e[0]||(e[0]=[r('<h1 id="media-servers" tabindex="-1">Media Servers <a class="header-anchor" href="#media-servers" aria-label="Permalink to &quot;Media Servers&quot;">​</a></h1><p>All media on the United States Internet must be stored on an approved media server.</p><h2 id="media-serving" tabindex="-1">Media Serving <a class="header-anchor" href="#media-serving" aria-label="Permalink to &quot;Media Serving&quot;">​</a></h2><p>The content-id&#39;s must be associated with content so client applications can pick up category, age restriction data.</p><p>All media servers must check their content with the <a href="/copyright/">copyright office</a> before serving it at least every 24 hours.</p><p>All media servers must have a delete API to allow the content filtering agency to remove media immediately.</p><h2 id="checksum-check" tabindex="-1">Checksum Check <a class="header-anchor" href="#checksum-check" aria-label="Permalink to &quot;Checksum Check&quot;">​</a></h2><p>An API must be provided to allow the content filtering system to run random checksum tests on data.</p><h2 id="serving-content" tabindex="-1">Serving Content <a class="header-anchor" href="#serving-content" aria-label="Permalink to &quot;Serving Content&quot;">​</a></h2><p>Content that is stored on the media server can have a public URL where the content can be streamed from anyone anywhere. It can also be marked as private where a one-time use URL must be requested from the media server owner and then given to a calling client.</p>',10)]))}const v=t(i,[["render",o]]);export{p as __pageData,v as default};
